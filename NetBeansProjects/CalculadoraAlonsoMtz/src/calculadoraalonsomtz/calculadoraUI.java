/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadoraalonsomtz;

import java.util.Arrays;
import java.util.List;
import java.util.Stack;

/**
 *
 * @author downvec
 */
public class calculadoraUI extends javax.swing.JFrame {

    /**
     * Creates new form calculadoraUI
     */
    public calculadoraUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn8 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btnSolve = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();
        btnTimes = new javax.swing.JButton();
        btnDivide = new javax.swing.JButton();
        btnMenos = new javax.swing.JButton();
        btnCero = new javax.swing.JButton();
        btnDecimal = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnOpenPar = new javax.swing.JButton();
        btnChangeSign = new javax.swing.JButton();
        calcDisplay = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 108, 84));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(new java.awt.Color(0, 108, 84));
        setResizable(false);

        btn8.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn8.setText("8");
        btn8.setAlignmentY(0.0F);
        btn8.setPreferredSize(new java.awt.Dimension(100, 50));
        btn8.setSize(new java.awt.Dimension(100, 100));
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn7.setText("7");
        btn7.setAlignmentY(0.0F);
        btn7.setPreferredSize(new java.awt.Dimension(100, 50));
        btn7.setSize(new java.awt.Dimension(100, 100));
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn9.setText("9");
        btn9.setAlignmentY(0.0F);
        btn9.setPreferredSize(new java.awt.Dimension(100, 50));
        btn9.setSize(new java.awt.Dimension(100, 100));
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn6.setText("6");
        btn6.setAlignmentY(0.0F);
        btn6.setPreferredSize(new java.awt.Dimension(100, 50));
        btn6.setSize(new java.awt.Dimension(100, 100));
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn5.setText("5");
        btn5.setAlignmentY(0.0F);
        btn5.setPreferredSize(new java.awt.Dimension(100, 50));
        btn5.setSize(new java.awt.Dimension(100, 100));
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn4.setText("4");
        btn4.setAlignmentY(0.0F);
        btn4.setPreferredSize(new java.awt.Dimension(100, 50));
        btn4.setSize(new java.awt.Dimension(100, 100));
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn3.setText("3");
        btn3.setAlignmentY(0.0F);
        btn3.setPreferredSize(new java.awt.Dimension(100, 50));
        btn3.setSize(new java.awt.Dimension(100, 100));
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn2.setText("2");
        btn2.setAlignmentY(0.0F);
        btn2.setPreferredSize(new java.awt.Dimension(100, 50));
        btn2.setSize(new java.awt.Dimension(100, 100));
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btn1.setAlignmentY(0.0F);
        btn1.setLabel("1");
        btn1.setPreferredSize(new java.awt.Dimension(100, 50));
        btn1.setSize(new java.awt.Dimension(100, 100));
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btnSolve.setBackground(new java.awt.Color(0, 108, 84));
        btnSolve.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnSolve.setForeground(new java.awt.Color(255, 255, 255));
        btnSolve.setText("=");
        btnSolve.setAlignmentY(0.0F);
        btnSolve.setPreferredSize(new java.awt.Dimension(100, 50));
        btnSolve.setSize(new java.awt.Dimension(100, 100));
        btnSolve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolveActionPerformed(evt);
            }
        });

        btnMinus.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnMinus.setText("-");
        btnMinus.setAlignmentY(0.0F);
        btnMinus.setPreferredSize(new java.awt.Dimension(100, 50));
        btnMinus.setSize(new java.awt.Dimension(100, 100));
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });

        btnTimes.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnTimes.setText("*");
        btnTimes.setAlignmentY(0.0F);
        btnTimes.setPreferredSize(new java.awt.Dimension(100, 50));
        btnTimes.setSize(new java.awt.Dimension(100, 100));
        btnTimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimesActionPerformed(evt);
            }
        });

        btnDivide.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnDivide.setText("/");
        btnDivide.setAlignmentY(0.0F);
        btnDivide.setPreferredSize(new java.awt.Dimension(100, 50));
        btnDivide.setSize(new java.awt.Dimension(100, 100));
        btnDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivideActionPerformed(evt);
            }
        });

        btnMenos.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnMenos.setText("(-)");
        btnMenos.setAlignmentY(0.0F);
        btnMenos.setPreferredSize(new java.awt.Dimension(100, 50));
        btnMenos.setSize(new java.awt.Dimension(100, 100));
        btnMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenosActionPerformed(evt);
            }
        });

        btnCero.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnCero.setText("0");
        btnCero.setAlignmentY(0.0F);
        btnCero.setPreferredSize(new java.awt.Dimension(100, 50));
        btnCero.setSize(new java.awt.Dimension(100, 100));
        btnCero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCeroActionPerformed(evt);
            }
        });

        btnDecimal.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnDecimal.setText(".");
        btnDecimal.setAlignmentY(0.0F);
        btnDecimal.setPreferredSize(new java.awt.Dimension(100, 50));
        btnDecimal.setSize(new java.awt.Dimension(100, 100));
        btnDecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecimalActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnClear.setText("Clear");
        btnClear.setAlignmentY(0.0F);
        btnClear.setBorder(null);
        btnClear.setPreferredSize(new java.awt.Dimension(100, 50));
        btnClear.setSize(new java.awt.Dimension(100, 100));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnPlus.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnPlus.setText("+");
        btnPlus.setAlignmentY(0.0F);
        btnPlus.setPreferredSize(new java.awt.Dimension(100, 50));
        btnPlus.setSize(new java.awt.Dimension(100, 100));
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });

        btnOpenPar.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnOpenPar.setText("(");
        btnOpenPar.setAlignmentY(0.0F);
        btnOpenPar.setPreferredSize(new java.awt.Dimension(100, 50));
        btnOpenPar.setSize(new java.awt.Dimension(100, 100));
        btnOpenPar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenParActionPerformed(evt);
            }
        });

        btnChangeSign.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        btnChangeSign.setText(")");
        btnChangeSign.setAlignmentY(0.0F);
        btnChangeSign.setPreferredSize(new java.awt.Dimension(100, 50));
        btnChangeSign.setSize(new java.awt.Dimension(100, 100));
        btnChangeSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeSignActionPerformed(evt);
            }
        });

        calcDisplay.setFont(new java.awt.Font("Lucida Grande", 0, 22)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnOpenPar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btnChangeSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnDivide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSolve, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addComponent(calcDisplay)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(calcDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(168, 168, 168))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnDivide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnChangeSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOpenPar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(56, 56, 56))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnSolve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    //Atributos de clase
    String[] coleccionOperadores = new String[]{"+","-","*","/"};
    String[] coleccionNumeros = new String[]{"1","2","3","4","5","6","7","8","9","0"};
    String[] coleccionParentesis = new String[]{"(",")"};
    String displayText = " "; 
    String lastAddedChar = " "; 
    
    
    public void onNumberClicked(String numero){
        if (isOperador(numero) || isParentesis(numero)){
            displayText = displayText + " " + numero + " "; 
            lastAddedChar = numero; 
        }else if (isNumero(numero) || isPuntoDecimal(numero) || numero.equals("~")){
            displayText = displayText + numero; 
            lastAddedChar = numero; 
        }
 
        lastAddedChar = numero; 
        refreshDisplay(); 
    }
    
    public void clearAll(){
        displayText = " "; 
        refreshDisplay(); 
    }
    
    public void refreshDisplay(){
        calcDisplay.setText(displayText); 
    }
    
    public boolean isOperador(String in){
        return (Arrays.asList(coleccionOperadores).contains(in)); 
    }
    
    public boolean isParentesis(String in){
        return (Arrays.asList(coleccionParentesis).contains(in)); 
    }
    
    public boolean isPuntoDecimal(String in){
        return (in.equals(".")); 
    }
    
    public boolean isNumero(String in){
        return (Arrays.asList(coleccionNumeros).contains(in)); 
    }
    
    public int getPrioridad(String c){
        int ans = 0; 
        switch(c){
            case ("+"): 
                ans = 1; 
                break; 
            case("-"): 
                ans = 1; 
                break;
            case("*"): 
                ans = 2; 
                break; 
            case("/"): 
                ans = 2; 
                break;
        }
        return ans; 
    }
    
    public double ejecutarOperacion(String operador, double operando1, double operando2){
        double res = 0; 
        switch(operador){
            case ("+"): 
                res = operando1 + operando2; 
                break; 
            case ("-"): 
                res = operando1 - operando2; 
                break; 
            case ("*"): 
                res = operando1 * operando2; 
                break; 
            case ("/"): 
                if (operando2 != 0){
                    res = operando1 / operando2; 
                }else {
                    displayText = "División entre 0 no definida"; 
                    refreshDisplay();  
                }
        }
        return res; 
    }
    
    public void onSolveClick(String rawInput){
        //Paso 1: Chequeo sintactico
        Boolean esValido = checarSintaxis(rawInput); 
        ////System.out.println(esValido); 
        
        //Paso 2: Convertir a notacion postfija
        if (!esValido){
            return; 
        }
        
        String resultadoPostfijo = convierteAPostfijo(rawInput); 
        System.out.println(resultadoPostfijo); 
        refreshDisplay(); 
        
        //Paso 3: Evaluar expresion
        double resultadoFin = evaluaPostfijo(resultadoPostfijo); 
        displayText = String.valueOf(resultadoFin); 
        refreshDisplay(); 
        
        
    }
    
    public boolean checarSintaxis(String input){
        String c, c1; 
        int indexLastClose = 0; 
        int indexLastOpen = 0; 
        boolean esValido = true; 
        boolean parentesisSimetrico = true; 
        
        String[] inputSplit = input.trim().split(" "); 
        
        //Si está vacio, no es expresion válida, 
        if (inputSplit.length <=0) {
            displayText = "Error. Operacion vacia"; 
            refreshDisplay(); 
            return false; 
        }
        
        //Si el primer o ultimo caracter son operadores, no tiene operando: error
        if (isOperador(inputSplit[0]) || isOperador(inputSplit[inputSplit.length -1]) ){
            esValido = false; 
            displayText = "Error. Operador sin operando inmediato"; 
            refreshDisplay(); 
        }
        
        //Checar caracter por caracter
        for (int i=0; i < inputSplit.length; i++){
            c = inputSplit[i]; 
            
            //Obtiene el caracter siguiente al detectar que es operador. Si tambien es operador: error
            if (i < inputSplit.length-1 && isOperador(c) ){
                c1 = inputSplit[i+1]; 
                if(isOperador(c1)){
                    esValido = false; 
                    displayText = "Error. Dos operadores contiguos"; 
                    refreshDisplay(); 
                }
            }

            //Loop que inicia si se detecta (. Para hasta encontrar ). Si no se encuentra: error. 
            if (c.equals("(") && parentesisSimetrico){
                indexLastOpen = i;  
                for (int j = i+1; j < inputSplit.length; j++){
                    if (inputSplit[j].equals(")") && j > indexLastClose){
                        indexLastClose = j; 
                        parentesisSimetrico = true; 
                        break; 
                    }else{
                        parentesisSimetrico = false;
                    }
                }
            }
            
            //Loop que inicia si de detecta ). Para hasta encontrar (. Si no se encuentra: error. 
            if (c.equals(")") && parentesisSimetrico){
                for (int j = i; j >= 0; j--){
                    if (inputSplit[j].equals("(") && j <= indexLastOpen){
                        indexLastOpen = j; 
                        parentesisSimetrico = true; 
                        break;
                    }else{
                        parentesisSimetrico = false;
                    }
                }
            }
            
            
        }

        if (!parentesisSimetrico){
            displayText = "Error. Parentesis desbalanceado"; 
            refreshDisplay(); 
            esValido = false; 
        }
        
        return esValido; 
    }
    
    public String convierteAPostfijo(String inputInfix){
        //TODO: Tomar lo que este entre espcacios como numeros individuales. 
        String[] inputSplit = inputInfix.trim().split("");         
        
        Stack<String> pilaOperadores = new Stack<String>(); 
        String resultadoPostfijo = ""; 
        
        for (int j = 0; j < inputSplit.length ; j++){
            String ch = inputSplit[j]; 
            
            if(isNumero(ch) || isPuntoDecimal(ch) || ch.equals(" ") || ch.equals("~")){
                resultadoPostfijo = resultadoPostfijo + ch; 
            } else if (isOperador(ch)){
                while (!pilaOperadores.isEmpty() && getPrioridad(ch) <= getPrioridad(pilaOperadores.peek())){
                    resultadoPostfijo = resultadoPostfijo + " " + pilaOperadores.pop(); 
                }
                pilaOperadores.push(ch); 
            } else if (ch.equals("(")){
                pilaOperadores.push(ch); 
            } else if (ch.equals(")")){
                while (!pilaOperadores.isEmpty() && !pilaOperadores.peek().equals("(")){
                    resultadoPostfijo = resultadoPostfijo + pilaOperadores.pop(); 
                }
                pilaOperadores.pop(); 
                
            }

        }
        
        while(!pilaOperadores.isEmpty()){
            resultadoPostfijo = resultadoPostfijo + " " + pilaOperadores.pop(); 
        }

        return resultadoPostfijo; 
        
    }
    
    public boolean checaDobleDecimal(String inputInfix){
        boolean ans = true; 
        String[] inputSplit = inputInfix.trim().split("");      
        
        for (int i =0; i < inputSplit.length; i++){
            int contadorPunto = 0;
            String charchar = inputSplit[i];
            
            for (int j=0; j<charchar.length(); j++){
                 
                String curChar = String.valueOf(charchar.charAt(j)); 
                if (curChar.equals(".")); 
                contadorPunto++; 
            }
            if (contadorPunto > 1){
                ans = false; 
            }
        }
        return ans; 
    }
    
    public double evaluaPostfijo(String inputPostfijo){
        String[] inputProcesado = inputPostfijo.split(" "); 
        
        Stack<Double> pilaOperandos = new Stack<Double>(); 
        double operando1 = 0; 
        double operando2 = 0; 
        double resultado = 0; 
        

        for (int i=0; i < inputProcesado.length ; i++){
            String c = inputProcesado[i];

            if (!c.equals("")){
                System.out.println(c); 
                System.out.println(String.valueOf(c.charAt(0))); 
                if(!isOperador(c)){
                    if (String.valueOf(c.charAt(0)).equals("~")){
                        
                        char[] newCharList = c.toCharArray(); 
                        newCharList[0] = '-';
                      
                        pilaOperandos.push(Double.parseDouble(String.valueOf(newCharList))); 
                    }else{
                        pilaOperandos.push(Double.parseDouble(c)); 
                    }
                    
                }else {
                    operando1 = (double) pilaOperandos.pop(); 
                    operando2 = (double) pilaOperandos.pop();
                    resultado = ejecutarOperacion(c, operando1, operando2); 
                    pilaOperandos.push(resultado); 
                }
            }
        }
        
        double resultadoFin = (double) pilaOperandos.pop(); 
       
        return resultadoFin; 
    }
    
    
    private void btnOpenParActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenParActionPerformed
        onNumberClicked("("); 
    }//GEN-LAST:event_btnOpenParActionPerformed

    private void btnCeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCeroActionPerformed
        onNumberClicked("0"); 
    }//GEN-LAST:event_btnCeroActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        onNumberClicked("1"); 
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        onNumberClicked("2"); 
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        onNumberClicked("3"); 
    }//GEN-LAST:event_btn3ActionPerformed

    private void btnDecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecimalActionPerformed
        onNumberClicked("."); 
    }//GEN-LAST:event_btnDecimalActionPerformed

    private void btnMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenosActionPerformed
        onNumberClicked("~"); 
    }//GEN-LAST:event_btnMenosActionPerformed

    private void btnSolveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolveActionPerformed
        onSolveClick(displayText); 
    }//GEN-LAST:event_btnSolveActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        onNumberClicked("4"); 
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        onNumberClicked("5"); 
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        onNumberClicked("6"); 
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        onNumberClicked("7"); 
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        onNumberClicked("8"); 
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        onNumberClicked("9"); 
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnChangeSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeSignActionPerformed
        onNumberClicked(")"); 
    }//GEN-LAST:event_btnChangeSignActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
        onNumberClicked("+"); 
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        onNumberClicked("-"); 
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnTimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimesActionPerformed
        onNumberClicked("*"); 
    }//GEN-LAST:event_btnTimesActionPerformed

    private void btnDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivideActionPerformed
        onNumberClicked("/"); 
    }//GEN-LAST:event_btnDivideActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll(); 
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculadoraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculadoraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculadoraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculadoraUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculadoraUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnCero;
    private javax.swing.JButton btnChangeSign;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDecimal;
    private javax.swing.JButton btnDivide;
    private javax.swing.JButton btnMenos;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnOpenPar;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnSolve;
    private javax.swing.JButton btnTimes;
    private javax.swing.JTextField calcDisplay;
    // End of variables declaration//GEN-END:variables
}
